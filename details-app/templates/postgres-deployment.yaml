apiVersion: apps/v1
kind: Deployment
metadata:
  name: { { .Values.postgres.name } } # Name of the deployment.
  labels:
    app: { { .Values.postgres.app } } # Labels used to identify and select this deployment.
spec:
  replicas: 1 # Number of PostgreSQL pod replicas to run.
  selector:
    matchLabels:
      app: { { .Values.postgres.app } } # Ensures that the Deployment selects pods with this label.
  template:
    metadata:
      labels:
        app: { { .Values.postgres.app } } # Label assigned to each PostgreSQL pod.
    spec:
      containers:
        - name: { { .Values.postgres.name } } # Name of the PostgreSQL container.
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: { { .Values.postgres.image.pullPolicy } }
          env:
            - name: POSTGRES_DB
              value: { { .Values.postgres.database.name } } # The name of the PostgreSQL database to be created.
            - name: POSTGRES_USER
              value: { { .Values.postgres.database.user } } # The PostgreSQL user.
            - name: POSTGRES_PASSWORD
              value: { { .Values.postgres.database.password } } # The password for the PostgreSQL user.
          volumeMounts:
            - name: postgres-storage # Name of the volume for PostgreSQL storage.
              mountPath: /var/lib/postgresql/data # Directory inside the container where the volume is mounted.
      volumes:
        - name: postgres-storage # Refers to a PersistentVolumeClaim for persistent storage.
          persistentVolumeClaim:
            claimName: { { .Values.postgres.pvcName } } # Name of the PVC that will provide persistent storage.
